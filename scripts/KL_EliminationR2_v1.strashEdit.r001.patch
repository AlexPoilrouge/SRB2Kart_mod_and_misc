diff -ru KL_EliminationR2_v1/LUA_EL KL_EliminationR2_v1.strashEdit.r001/LUA_EL
--- KL_EliminationR2_v1/LUA_EL	2021-08-21 09:59:27.959016367 +0200
+++ KL_EliminationR2_v1.strashEdit.r001/LUA_EL	2021-08-21 10:08:48.161675576 +0200
@@ -1,128 +1,46 @@
 //elimination, original work by Amperbee aka Rapidgame7#1949
-//this is elimination R2 which I have finally gotten enough courage to release by freeman#7626
-//the original script is by Amperbee, this is mostly just a heavily modified version of it
-//that i've done with permission from them (and they have been kind enough to allow me to re-release it)
+//NVJR elimination most kludging done by freeman#7626 and galactice (with permission)
 
 //hannu has invented and or used this method below for optimization
 //i have been told it is faster but I still want to die
 local TICRATE = TICRATE
 local FRACUNIT = FRACUNIT
 
-//turns elim on or off
-local el_enabled = CV_RegisterVar({
-	name = "elimination",
-	defaultvalue = "On", 
-	flags = CV_NETVAR|CV_SHOWMODIF,
-	possiblevalue = CV_OnOff})
-//amount of time between eliminations after pre-game
-local el_time = CV_RegisterVar({
-	name = "elim_time", 
-	defaultvalue = 15, 
-	flags = CV_NETVAR, 
-	possiblevalue = CV_Natural})
-//amount of time after race start but before eliminations start
-local el_stime = CV_RegisterVar({
-	name = "elim_starttime",  
-	defaultvalue = 60, 
-	flags = CV_NETVAR, 
-	possiblevalue = CV_Natural})
-//amount of time (seconds) the elim timer will wait for someone clearly in last
-//to be decided before auto-killing everyone in last :mrkill:
-local el_overtime = CV_RegisterVar({
-	name = "elim_overtime",  
-	defaultvalue = 6, 
-	flags = CV_NETVAR, 
-	possiblevalue = CV_Natural})
-//amount of time (tics) a player must be in last place to be eliminated by timer
-//this is added/removed to every tic, so it doesnt have to be uninterrupted time
-local el_safetynet = CV_RegisterVar({
-	name = "elim_safetynet",  
-	defaultvalue = 3*TICRATE, 
-	flags = CV_NETVAR, 
-	possiblevalue = CV_Natural})
-
-//clients can use this to turn announcement drawing on/off if its too much for them
-local el_announcements = CV_RegisterVar({
-	name = "elim_announcements",  
-	defaultvalue = "On", 
-	flags = CV_SHOWMODIF, 
-	possiblevalue = CV_OnOff})
-
-//minimum number of players in-game not spectating to start an elimination match
-local el_minplayers = CV_RegisterVar({
-	name = "elim_minplayers",  
-	defaultvalue = 0, 
-	flags = CV_NETVAR|CV_SHOWMODIF, 
-	possiblevalue = CV_Natural})
-//when players left drops to this value or below, SPB is disabled from rolling
-//0 turns this functionality off
-local el_spbgone = CV_RegisterVar({
-	name = "elim_spbgone",  
-	defaultvalue = 0, 
-	flags = CV_NETVAR, 
-	possiblevalue = {MIN=0,MAX=9999}})
-//when the SPB stops rolling, if this is on lightning shields will also stop rolling
-local el_lightninggone = CV_RegisterVar({
-	name = "elim_lightninggone",  
-	defaultvalue = "Off", 
-	flags = CV_NETVAR, 
-	possiblevalue = CV_OnOff})
-
-//default setting of the SPB for mixed-gamemode servers.
-local el_spbdefault = CV_RegisterVar({
-	name = "elim_spbdefault",  
-	defaultvalue = "On", 
-	flags = CV_NETVAR, 
-	possiblevalue = CV_OnOff})
-
-//timescaling will try to linearly scale the elim timer depending on number of
-//players racing when the pre-game timer expires
-local el_timescaling = CV_RegisterVar({
-	name = "elim_timescaling",  
-	defaultvalue = "Off", 
-	flags = CV_NETVAR, 
-	possiblevalue = CV_OnOff})
-//minimum number of players that scaling starts at
-//(at or below this, you'll use the max time)
-local el_scalingminplayers = CV_RegisterVar({
-	name = "elim_scalingminplayers",  
-	defaultvalue = 2, 
-	flags = CV_NETVAR, 
-	possiblevalue = {MIN=1,MAX=200}})
-//maximum number of players scaling stops at
-//(at or above this, you'll use min time)
-local el_scalingmaxplayers = CV_RegisterVar({
-	name = "elim_scalingmaxplayers",  
-	defaultvalue = 12, 
-	flags = CV_NETVAR, 
-	possiblevalue = {MIN=1,MAX=200}})
-//minimum elimination timer (used at scalingmaxplayers)
-local el_scalingmintime = CV_RegisterVar({
-	name = "elim_scalingmintime",  
-	defaultvalue = 7, 
-	flags = CV_NETVAR, 
-	possiblevalue = CV_Natural})
-//maximum elimination timer (used at scalingminplayers)
-local el_scalingmaxtime = CV_RegisterVar({
-	name = "elim_scalingmaxtime",  
-	defaultvalue = 25, 
-	flags = CV_NETVAR, 
-	possiblevalue = CV_Natural})
+local el_enabled = CV_RegisterVar({"elimination", "On", CV_NETVAR|CV_SHOWMODIF, CV_OnOff})
+local el_time = CV_RegisterVar({"elim_time", "15", CV_NETVAR, CV_Natural})
+local el_stime = CV_RegisterVar({"elim_starttime", "60", CV_NETVAR, CV_Natural})
+local el_announcements = CV_RegisterVar({"elim_announcements", "On", CV_SHOWMODIF, CV_OnOff})
+
+local el_minplayers = CV_RegisterVar({"elim_minplayers", 0, CV_NETVAR|CV_SHOWMODIF, CV_Natural})
+//by popular demand
+
+local el_spbgone = CV_RegisterVar({"elim_spbgone", 0, CV_NETVAR, {MIN=0,MAX=9999}})
+local el_lightninggone = CV_RegisterVar({"elim_lightninggone", "Off", CV_NETVAR, CV_OnOff})
+local el_spbdefault = CV_RegisterVar({"elim_spbdefault", "On", CV_NETVAR, CV_OnOff})
+
+local el_timescaling = CV_RegisterVar({"elim_timescaling", "Off", CV_NETVAR, CV_OnOff})
+local el_scalingminplayers = CV_RegisterVar({"elim_scalingminplayers", "2", CV_NETVAR, {MIN=1,MAX=200}})
+local el_scalingmaxplayers = CV_RegisterVar({"elim_scalingmaxplayers", "12", CV_NETVAR, {MIN=1,MAX=200}})
+local el_scalingmintime = CV_RegisterVar({"elim_scalingmintime", "10", CV_NETVAR, CV_Natural})
+local el_scalingmaxtime = CV_RegisterVar({"elim_scalingmaxtime", "25", CV_NETVAR, CV_Natural})
 
+local el_scorereport = CV_RegisterVar({"elim_scorereport", "Off", CV_NETVAR, CV_OnOff})
 //dumps all players scores into the log round end, tourney mostley
-local el_scorereport = CV_RegisterVar({
-	name = "elim_scorereport", 
-	defaultvalue = "Off", 
-	flags = CV_NETVAR, 
-	possiblevalue = CV_OnOff})
-
-//testing var for singleplayer testing
-//prevents you from dying to elimination and forces countdown to run on 1 player
-local el_test = CV_RegisterVar({
-	name = "elim_test", 
-	defaultvalue = "Off", 
-	flags = CV_NETVAR|CV_NOSHOWHELP, 
-	possiblevalue = CV_OnOff})
+
+local el_test = CV_RegisterVar({"elim_test", "Off", CV_NETVAR|CV_NOSHOWHELP, CV_OnOff})
+
+//el_enabled - toggles elim on and off in-game
+//el_time - the time between regular player eliminations once the game has started, seconds
+//el_stime - the time the race must progress for before the first elimination timer begins
+//el_announcements - client-side, if this is disabled playes won't see elimination announcements
+
+//el_timescaling - controls if the elim_time scales itself based on number of players
+//el_scalingminplayers - at or below min players, elim_time is el_scalingmaxtime
+//el_scalingmaxplayers - at or above max players, elim_time is el_scalingmintime
+//el_scalingmin/maxtime - if players are between min and max, the elim_time is adjusted linearly between min and max
+
+// test is for testing elimination procedures:
+// Prevents death by elimination, and forces the countdown to run under 1P mode.
 
 -- local slotmod_prng_local_t = 0
 -- local slotmod_prng_local_x = 6278
@@ -164,8 +82,8 @@
 	//returns x and y of calc
 end
 
-local function countPlayersInGame() //this original guy here from callmore's hpmod
-	local out = 0 //thank you based callmore
+local function countPlayersInGame() //sorry callmore I stole this to use it here -freeman
+	local out = 0
 	for p in players.iterate do
 		if not (p and p.valid and not p.spectator and not (p.pflags & PF_TIMEOVER)) then continue end
 		out = $+1
@@ -541,6 +459,7 @@
 	{"flex tape","couldn't seal","%n"},
 	{"%n","was forsaken"},
 	{"%n","is gonna carry","that weight..."},
+	{"%n","pinged retrostation"}, //can't wait to get an angry message about this one //UPDATE: angry message recieved
 	{"%n","committed persona 3"},
 	{"%n","never saw it coming"},
 	{"i can't believe","%n","is dead"},
@@ -549,20 +468,7 @@
 	{"%n","was marked","for death"},
 	{"wake me up","%n"},
 	{"%n","can't wake up"},
-	{"%n","had rapid mid-drive","disassembly"},
-	{"%n","was hit by the","kitchen sink"},
-	{"Soap trusted you,","%n"},
-	{"THINK,","%n","THINK!"},
-	{"Nothin' personnel,","%n"},
-	{"%n","contracted ligma"},
-	{"%n","took a","calculated risk"},
-	{"try some record attack","%n"},
-	{"patch notes: -removed","%n"},
-	{"%n","didn't fly so good"},
-	{"%n","doesn't feel so good"},
-	{"%n","failed to boostquench"},
-	{"mmm, no, very unwise","%n"},
-	{"women want","%n","fish fear them"}
+	{"%n","had rapid mid-drive","disassembly"}
 }
 
 local chosenAnnouncement = 1
@@ -581,7 +487,88 @@
 		if s == "%n" then s = elim.diedName end
 		drawStringMkII(tsx, realtsy, string.upper(s), FONT_KART2, V_SNAPTOTOP|V_40TRANS, {align="center",color=SKINCOLOR_BROWN})
 	end
-end
+end
+
+
+
+
+
+-- [ strashEdit ] --
+-- just factoring this part
+local function _respawnEliminatedPlayer(p)
+	if p.elim_rejoinEnd and p.spectator then
+		p.spectator = false
+		if p.pflags&PF_WANTSTOJOIN then
+			p.pflags = p.pflags^^PF_WANTSTOJOIN
+		end
+	end
+end
+
+local function _respawnEliminatedPlayers()
+	for p in players.iterate do
+		_respawnEliminatedPlayer(p)
+	end
+end
+
+-- for the mods that end the round themselves because they need to display something
+-- at the end of the race or whatever
+local function _endElimRound()
+	COM_BufInsertText(server, "allowteamchange 1")
+	//chatprint("\x83<SERVER> End of round! Team change is now allowed.")
+	local place = 0 //place they finished (but actually the minutes displayed in realtime
+	local minutes = 0 //minutes they survived (but actually the seconds displayed in realtime
+	local seconds = 0 //seconds survived (but actually the centiseconds displayed in realtime
+	
+	-- [strashEdit] --
+	-- yeah, in friend races, let's just not do the other stuff
+	-- (team win when the last survivor belong to you team is fine)
+	-- --
+	if elim.friendly and FRIENDMOD_TeamBattle() then
+		for p in players.iterate do
+			_respawnEliminatedPlayer(p)
+		end
+		return 
+	end
+	
+	for p in players.iterate do //oh my god this is a hack				
+		if p.eliminatedtime and p.eliminatedpos then //basically we are calculating time survived
+			place = TICRATE*60*p.eliminatedpos //but because of results screen im going to force these numbers to play nice
+			minutes = p.eliminatedtime/(60*TICRATE)
+			seconds = (p.eliminatedtime-(minutes*60*TICRATE))/TICRATE
+			//seconds = (p.eliminatedtime-(p.eliminatedtime/(60*TICRATE)))/100
+			//print("DEBUG: place: " + place + " / minutes: " + minutes + " / seconds: " + seconds)
+		else //they weren't eliminated or something went wrong
+			place = TICRATE*60 //more than likely they are the winner
+			minutes = p.realtime/(60*TICRATE)
+			seconds = (p.realtime-(minutes*60*TICRATE))/TICRATE					
+		end
+		p.realtime = place+(minutes*TICRATE)+(seconds*TICRATE/100)
+		if not p.spectator then
+			chatprint("\x83<SERVER> "..p.name.." survived!")
+		end
+		//if p.eliminatedtime then p.realtime = p.eliminatedtime end
+		//if p.eliminatedpos then p.kartstuff[k_position] = p.eliminatedpos end
+	end
+	G_ExitLevel()
+	for p in players.iterate do if p.valid
+		S_StopMusic(p)
+		if p.exiting or (p.eliminatedpos and p.eliminatedpos <= 3) then
+			S_ChangeMusic("KROK", true, p)
+			//print(p.name.." playing KROK (placed "..p.eliminatedpos..")")
+		elseif p.eliminatedpos <= elim.startpcount/2 //tophalf
+			S_ChangeMusic("RACENT", true, p)
+			//print(p.name.." playing RACENT (placed "..p.eliminatedpos..")")
+		else
+			S_ChangeMusic("KRLOSE", true, p)
+			//print(p.name.." playing KRLOSE (placed "..p.eliminatedpos..")")
+		end
+		-- [ strashEdit ]
+		-- this part has been factored
+		_respawnEliminatedPlayer(p)
+		--
+	end end
+end
+-- --
 
 
 COM_AddCommand("forcewin", function()
@@ -636,13 +623,19 @@
 			COM_BufInsertText(server, "basenumlaps \034Map Default\034")
 		end
 		COM_BufInsertText(server, "allowteamchange 1")
-	end
+	end
+	
+	-- [ strashEdit ] --
+	-- incase of external 'exitlevel' call
+	_respawnEliminatedPlayers()
+	--
+	
 	if not el_scorereport.value then return end
 	local roundnum = "???"
 	if server.roundnumber then roundnum = server.roundnumber end
 	print("===== SCORE REPORT: ROUND #"..roundnum.." =====")
 	print("\133"..string.upper(mapheaderinfo[gamemap].lvlttl).." "..string.upper(mapheaderinfo[gamemap].zonttl))
-	print("\131##\128| \131NAME                  \128| \131PTS \128|\133DMG \128|\135CMB \128|\131KIL")
+	print("\131##\128| \131NAME                  \128| \131PTS")
 	local sortedplayers = {}
 	//print("storing players")
 	for p in players.iterate do
@@ -662,19 +655,7 @@
 		local pos = string.format("%02i",i)
 		local pname = string.format("%-21s",q.name)
 		local pscore = string.format("%4s",q.score)
-		local pdmg = string.format("%3s",0) //these might not exist so you get this nonsense
-		local pcmb = string.format("%3s",0)
-		local pkil = string.format("%3s",0)
-		if q.hpmod.dmgpoints then
-			pdmg = string.format("%3s",q.hpmod.dmgpoints)
-		end
-		if q.hpmod.combopoints then
-			pcmb = string.format("%3s",q.hpmod.combopoints)
-		end
-		if q.hpmod.killpoints then
-			pkil = string.format("%3s",q.hpmod.killpoints)
-		end
-		print("\130"..pos.."\128| "..pname.." |\132"..pscore.. " |\133"..pdmg.." |\135"..pcmb.." |\131"..pkil)
+		print("\130"..pos.."\128| "..pname.." |\132"..pscore)
 	end
 	server.roundnumber = $+1
 end)
@@ -689,7 +670,7 @@
 			local pm = m.tied
 
 			local thisAng = leveltime*(ANG2*3)
-			local x,y = cSpd(thisAng+m.angmod, max(elim.curtime/2,(el_safetynet.value-p.elimlastplacetime)/2)*FRACUNIT, pm)
+			local x,y = cSpd(thisAng+m.angmod, (elim.curtime/2)*FRACUNIT, pm)
 			P_TeleportMove(m, pm.x+x, pm.y+y, pm.z)
 		else
 			P_RemoveMobj(m)
@@ -706,7 +687,16 @@
 	for p in players.iterate do if p and p.valid then
 		if not p.spectator then playercount = $+1 end
 	end end
-	if el_enabled.value == 1 then elim.on = true end
+	if el_enabled.value then elim.on = true end	
+	-- [ strashEdit ] --
+	-- yeah, I'm gonna go with "just play the map normally" if on
+	-- a non-looping track"
+	if elim.on and (mapheaderinfo[mapnum].levelflags & LF_SECTIONRACE) then
+		print("Sorry, non-looping maps can't be played in elim mode")
+		chatprint("\129Elimination\130 can't be played on \136section maps\130, sorry...")
+		elim.on= false
+	end
+	-- --
 	if el_minplayers.value != 0 then
 		if playercount < el_minplayers.value then
 			elim.on = false
@@ -739,10 +729,10 @@
 		p.eliminatedtime = 0
 		p.eliminatedpos = 0
 		p.elimlastmanannounce = 0 //timer for LAST MAN STANDING message
-		//p.elimlastmanodds = 0 //how many players you're up against when solo, used to determine how clutch you are LMAO DIDNT FINISH YET ASKDGHASKGFH
-		p.elimlastplacetime = 0
+		p.elimlastmanodds = 0 //how many players you're up against when solo, used to determine how clutch you are LMAO DIDNT FINISH YET ASKDGHASKGFH
 	end
-end)
+end)
+
 
 addHook("ThinkFrame", function() if elim.on and leveltime > 2 then // START THINKFRAME ---------------------------------------
 //print("===lmao el_timescaled*ticrate is "+elim.el_timescaled*TICRATE)
@@ -769,6 +759,19 @@
 	//are dumped back in the game immediately due to this flag, causing desyncs
 end
 
+//im sorry im sorry this horrific hack is here to turn booststack nerfing from slipstream off
+//this was required because permission to edit slipstream and acro is not feasible to get
+//and the slipstream var always evaluates true from the acro check for it
+//please never ever host this
+//print("THINKINGFRAME.PNG")
+if acrobatics != nil then
+	//print("ACROCHECK IS YES")
+	if booststacknerf == true then
+		booststacknerf = false
+		//print("BOOSTSTACKNERF MAKE YOU LOOSE CONTROL")
+	end
+end
+
 // Count live players! Also carry player pre-count actions
 
 local pcount = 0 // Total players
@@ -784,14 +787,15 @@
 local DEBUG_TEST = elim.test
 
 for p in players.iterate do if p and p.valid then
+	local pk = p.kartstuff
 	pcount = $+1
 	if p.mo and p.mo.valid and not p.spectator then
 		elim.livepcount = $+1
-		if p.kartstuff[k_position] > lastpos then
-			lastpos = p.kartstuff[k_position]
+		if pk[k_position] > lastpos then
+			lastpos = pk[k_position]
 			lastposp = 0
 		end
-		if p.kartstuff[k_position] == lastpos then
+		if pk[k_position] == lastpos then
 			lastposp = $+1
 		end
 		if elim.friendly and FRIENDMOD_TeamBattle() then
@@ -802,7 +806,6 @@
 				team2players = $+1
 			end
 		end
-		p.kartstuff[k_lapanimation] = 0 //lap indicators apparently cant be turned off normally and are annoying in elim
 	end
 end end
 
@@ -880,9 +883,9 @@
 			// this accounts for spectators or HP mod or whatever
 			// it also caps to the time between eliminations so it won't overflow the timer now
 			if el_timescaling.value == 1 then
-				elim.curtime = min(3*(elim.el_timescaled*TICRATE)/2,$+(elim.el_timescaled*TICRATE*3)/4)
+				elim.curtime = min(elim.el_timescaled*TICRATE,$+(elim.el_timescaled*TICRATE*3)/4)
 			else
-				elim.curtime = min(3*(el_time.value*TICRATE)/2,$+(el_time.value*TICRATE*3)/4)//adding only 75% of the timer to speed things up
+				elim.curtime = min(el_time.value*TICRATE,$+(el_time.value*TICRATE*3)/4)//adding only 75% of the timer to speed things up
 			end
 		end
 		//this block determines if the last teammate of a team died and that player is now solo and outnumbered
@@ -930,7 +933,7 @@
 			chosenAnnouncement = P_RandomRange(1, table.getn(announcements))
 			elim.eliminate = true
 			// We don't set the elimination time here - We do that later, AFTER we eliminate people
-			if elim.curtime < el_overtime.value*TICRATE*-1 then //-10*TICRATE overtime has no biz being 10 seconds long, 2 is more than enough
+			if elim.curtime < -2*TICRATE then //-10*TICRATE overtime has no biz being 10 seconds long, 2 is more than enough
 				// Wow, we're past schedule! Die now!
 				chosenAnnouncement = P_RandomRange(1, table.getn(announcements))
 				elim.eliminatenow = true
@@ -957,51 +960,11 @@
 		end
 		// elim_win is true and X seconds passed (for the music to play) after a win?
 		// End the level already, also play cute sounds
-		if elim.wintimer > 10*TICRATE then
-			COM_BufInsertText(server, "allowteamchange 1")
-			//chatprint("\x83<SERVER> End of round! Team change is now allowed.")
-			local place = 0 //place they finished (but actually the minutes displayed in realtime
-			local minutes = 0 //minutes they survived (but actually the seconds displayed in realtime
-			local seconds = 0 //seconds survived (but actually the centiseconds displayed in realtime
-			for p in players.iterate do //oh my god this is a hack				
-				if p.eliminatedtime and p.eliminatedpos then //basically we are calculating time survived
-					place = TICRATE*60*p.eliminatedpos //but because of results screen im going to force these numbers to play nice
-					minutes = p.eliminatedtime/(60*TICRATE)
-					seconds = (p.eliminatedtime-(minutes*60*TICRATE))/TICRATE
-					//seconds = (p.eliminatedtime-(p.eliminatedtime/(60*TICRATE)))/100
-					//print("DEBUG: place: " + place + " / minutes: " + minutes + " / seconds: " + seconds)
-				else //they weren't eliminated or something went wrong
-					place = TICRATE*60 //more than likely they are the winner
-					minutes = p.realtime/(60*TICRATE)
-					seconds = (p.realtime-(minutes*60*TICRATE))/TICRATE					
-				end
-				p.realtime = place+(minutes*TICRATE)+(seconds*TICRATE/100)
-				if not p.spectator then
-					chatprint("\x83<SERVER> "..p.name.." survived!")
-				end
-				//if p.eliminatedtime then p.realtime = p.eliminatedtime end
-				//if p.eliminatedpos then p.kartstuff[k_position] = p.eliminatedpos end
-			end
-			G_ExitLevel()
-			for p in players.iterate do if p.valid
-				S_StopMusic(p)
-				if p.exiting or (p.eliminatedpos and p.eliminatedpos <= 3) then
-					S_ChangeMusic("KROK", true, p)
-					//print(p.name.." playing KROK (placed "..p.eliminatedpos..")")
-				elseif p.eliminatedpos <= elim.startpcount/2 //tophalf
-					S_ChangeMusic("RACENT", true, p)
-					//print(p.name.." playing RACENT (placed "..p.eliminatedpos..")")
-				else
-					S_ChangeMusic("KRLOSE", true, p)
-					//print(p.name.." playing KRLOSE (placed "..p.eliminatedpos..")")
-				end
-				if p.elim_rejoinEnd then
-					p.spectator = false
-					if p.pflags&PF_WANTSTOJOIN then
-						p.pflags = p.pflags^^PF_WANTSTOJOIN
-					end
-				end
-			end end
+		if elim.wintimer > 10*TICRATE then
+			-- [ strashEdit ] --
+			-- factorized this part for compatibility
+			_endElimRound()
+			-- --
 		end
 	end
 end
@@ -1024,29 +987,28 @@
 	if p.elimlastmanannounce == nil then p.elimlastmanannounce = 0 end
 	if p.elimlastmanannounce > 0 then p.elimlastmanannounce = $-1 end
 	
-	if p.elimlastplacetime == nil then p.elimlastplacetime = 0 end
-	
+	local pk = p.kartstuff
 	p.needOrbit = false
 
 	--p.realtime = elim.curtime or 0
-	//p.realtime = p.kartstuff[k_position] + 69
+	//p.realtime = pk[k_position] + 69
 
 	local annoytime = min(max(2, elim.curtime/8), 2*TICRATE) // Don't want to deafen people
 	p.pingtime = $ + 1
 
 	if p.mo and p.mo.valid then
 		if not p.spectator and not elim.sp then
-			local inLast = p.kartstuff[k_position] == lastpos // self explanatory
+			local inLast = pk[k_position] == lastpos // self explanatory
 
 			if inLast then
 				// If this player is in last place and we have to eliminate them
 				// Or if the elimination time is past schedule...
-				if (elim.eliminate and lastposp == 1 and p.elimlastplacetime >= el_safetynet.value) or elim.eliminatenow then
+				if (elim.eliminate and lastposp == 1) or elim.eliminatenow then
 					p.elim_rejoinEnd = true
 					deathcount = $+1
 					p.eliminatedtime = p.realtime
 					p.eliminatedpos = countPlayersInGame()
-					p.kartstuff[k_position] = p.eliminatedpos //hopefully fixes SPB targeting spectators
+					pk[k_position] = p.eliminatedpos //hopefully fixes SPB targeting spectators
 					local timestring = string.format("%i'%02i\34%02i",G_TicsToMinutes(p.realtime,true),G_TicsToSeconds(p.realtime),G_TicsToCentiseconds(p.realtime))
 					chatprint("\x87<SERVER> "+p.name+" was eliminated at "+timestring+" in position "+countPlayersInGame())
 					//print("===I GOT NO FUKIN CLUE HOW LUA WORKS: ",timestring)
@@ -1058,9 +1020,8 @@
 				end
 			end
 
-			if leveltime > elimstarttime and inLast and not elim.win then
-				if p.elimlastplacetime < el_safetynet.value then p.elimlastplacetime = $+1 end
-				//print(p.name.."YOU BEEN IN LAST FOR "..p.elimlastplacetime.." TICS DUMMY")
+			if leveltime > elimstarttime
+			and inLast and not elim.win then
 				if p.pingtime > annoytime then
 					--print("beep")
 					//S_StartSound(nil, sfx_kc39, p)
@@ -1070,10 +1031,6 @@
 				p.needOrbit = true
 			else
 				p.pingtime = 128*FRACUNIT
-				if p.elimlastplacetime > 0 then
-					p.elimlastplacetime = $-1
-					//print(p.name.."YOU BEEN IN LAST FOR "..p.elimlastplacetime.." TICS DUMMY")
-				end
 			end
 		end
 
@@ -1196,7 +1153,7 @@
 			end
 			if elim.curtime < 0 then
 				rtext = "OVERTIME"
-				ttext = (elim.curtime / TICRATE) + el_overtime.value-1 //+9
+				ttext = (elim.curtime / TICRATE) + 1 //+9
 
 				rcol = ((leveltime/4)%2 == 1) and SKINCOLOR_RED or SKINCOLOR_RUBY
 				tcol = ((leveltime/4)%2 == 0) and SKINCOLOR_RED or SKINCOLOR_RUBY
@@ -1225,15 +1182,19 @@
 	drawStringMkII(ttx, tty, rtext, FONT_KART2, V_SNAPTOTOP|V_SNAPTORIGHT|V_20TRANS, {color=rcol,align="center"})
 	// Time
 	drawStringMkII(ttx, tty+16, ttext, FONT_KART2, V_SNAPTOTOP|V_SNAPTORIGHT|V_10TRANS, {color=tcol,align="center"})
-	
-	if el_announcements.value == 1 then
-		if elim.diedTimer > 0 then
-			//local tsx,tsy = 320*(FRACUNIT/2), 40*FRACUNIT + (elim.diedTimer*FRACUNIT/6)
-			local tsx,tsy = 320/2, 25 + (elim.diedTimer/20) //35
-			printAnnouncement(tsx, tsy)
-			//print("printing announcement with tsx, tsy: "+tsx/FRACUNIT+", "+tsy/FRACUNIT)
-		end
-	end
+	
+	-- [ strashEdit ] --
+	-- Moving this outside this scope
+	-- so that 'Elim_util_printRandomDeathAnnouncement' can work...
+	--if el_announcements.value == 1 then
+	--	if elim.diedTimer > 0 then
+	--		//local tsx,tsy = 320*(FRACUNIT/2), 40*FRACUNIT + (elim.diedTimer*FRACUNIT/6)
+	--		local tsx,tsy = 320/2, 25 + (elim.diedTimer/20) //35
+	--		printAnnouncement(tsx, tsy)
+	--		//print("printing announcement with tsx, tsy: "+tsx/FRACUNIT+", "+tsy/FRACUNIT)
+	--	end
+	--end
+	-- --
 
 	local sofmul = 4
 	local maxp = 2*sofmul
@@ -1258,10 +1219,44 @@
 
 	//(eliminate and lastposp == 1) or elim_curtime < -10*TICRATE
 
-end
+end
+	-- [ strashEdit ] --
+	if el_announcements.value == 1 then
+		if elim.diedTimer > 0 then
+			//local tsx,tsy = 320*(FRACUNIT/2), 40*FRACUNIT + (elim.diedTimer*FRACUNIT/6)
+			local tsx,tsy = 320/2, 25 + (elim.diedTimer/20) //35
+			printAnnouncement(tsx, tsy)
+			//print("printing announcement with tsx, tsy: "+tsx/FRACUNIT+", "+tsy/FRACUNIT)
+		end
+	end
+	-- --
 end
 end, "game")
 
-rawset(_G, "Elimination", function(...) //lets other scripts tell if elimination is running
-	return elim.on
-end)
\ No newline at end of file
+rawset(_G, "Elimination", function(...) //lets other scripts tell if elimination is running
+	return elim.on
+end)
+
+
+-- [ strashEdit ]
+-- for outside scripts that may call 'G_Exitlevel' or 'exitlevel' by themselves
+-- so that they can respawn back eliminated players
+rawset(_G, "Elim_respawnEliminatedPlayers", _respawnEliminatedPlayers)
+rawset(_G, "Elim_endWinRound", _endElimRound)
+
+rawset(_G, "Elim_util_printRandomDeathAnnouncement", function(playerName)
+	chosenAnnouncement = P_RandomRange(1, table.getn(announcements))
+	elim.diedName = playerName
+	elim.diedTimer = 5*TICRATE
+end)
+rawset(_G, "Elim_util_diedTimerTic", function()
+	if elim.diedTimer>0 then
+		elim.diedTimer= $-1
+	end
+	return elim.diedTimer
+end)
+rawset(_G, "Elim_util_started", function()
+	return elim.started
+end)
+-- --
+	
\ No newline at end of file
diff -ru KL_EliminationR2_v1/README KL_EliminationR2_v1.strashEdit.r001/README
--- KL_EliminationR2_v1/README	2021-08-21 09:59:27.959016367 +0200
+++ KL_EliminationR2_v1.strashEdit.r001/README	2021-08-21 10:08:48.161675576 +0200
@@ -1,12 +1,30 @@
-elimination changelog by freeman (last update 6/7/2021)
+=== STRASHBOT EDIT ===
+this version is a tweaked version, by Dr_Nope#0037 of
+KL_EliminationR1_NJVR_v4.71
+that was modified whith freeman's authorization
+to fix an issue of eliminated players not
+respawning when 'exitlevel' is called (or analog situations)
+as well as minor tweaks in 'LUA_EL' for mod compatibility
+reasons (search for 'StrashEdit' in source file)
+=== ===
+
+
+elimination changelog by freeman (last update 2/12/2021)
 original work by Amperbee aka Rapidgame7#1949
 that version is KL_EliminationR1
 
-The NVJR version has been tweaked and poked and prodded at by NVJR players (With permission)
+The NVJR version has been tweaked and poked and prodded at by NVJR players for about 8 months (With permission)
 most of the NVJR lifting has been done by freeman#7626
 here I will make an attempt to document changes away from the default,
 but there's a lot and i've likely already forgotten half of them
 
+2 DO:
+	RANDOMIZED ROUNDSTART SOUNDS
+		this should be easy I just need motivation to do it
+		just pick from a list of loaded roundstart noises
+		im going to hardcode it probably because lazy
+		UPDATE: lol this has been here for like four months and I still haven't done it
+
 CONSOLE VAR: elim_announcements (on/off)
 	this allows individual clients to turn elim announcments off if they
 	find they take too much space. just stops announcements from drawing.
@@ -20,8 +38,8 @@
 	It has been tremendously useful to hack other scripts and make them poorly cooperate with elimination if detected
 
 NETVARS: elim_timescaling (on/off)
-	elim_scalingminplayers (1-200)
-	elim_scalingmaxplayers (1-200)
+	elim_scalingminplayers (1-16)
+	elim_scalingmaxplayers (1-16)
 	elim_scalingmintime (natural)
 	elim_scalingmaxtime (natural)
 		these guys all control a scaling function that can be turned on and off with the first command.
@@ -34,7 +52,7 @@
 	
 	elim_minplayers (natural)
 		Elimination rounds won't start unless at least this many players are present (does not count spectators).
-		fun fact this is a feature request from aqua's karthouse, thank you based aqua
+		fun fact this is a feature request from aqua's karthouse
 
 	elim_spbgone (0-9999)
 		If the number of alive players during a round is at or below this level, the SPB is forcibly
@@ -51,18 +69,6 @@
 		when exiting level during intermission, the SPB will try to be set to this value.
 		this is so if hosts want to play with SPB off for whatever reason elim doesn't stealth enable it on them
 
-	elim_overtime (natural) [seconds]
-		controls how long overtime is allowed to last before elim just mcfucking
-		kills whoever it thinks is last. this is important because of:
-	
-	elim_safetynet (natural) [tics]
-		this is the number of tics someone has to be in last for in order to get
-		eliminated by the timer without going into overtime. If you haven't been
-		this number of tics in last, you'll enter into overtime.
-		Overtime will kill you either when it expires and you're in last, or
-		when your safetynet expires. You can see how long you have by the
-		warning markers. If the markers fully close on you, you die.
-
 ANNOUNCEMENTS:
 	as mentioned, you can turn them on and off
 	I dont know how many there were to begin with, but now there's 305. This is a mistake.
@@ -99,10 +105,28 @@
 	re-added the game clock as a text render below the elim clock
 	if the elim clock is below 6 seconds it gets an animated >>>05<<< thing that looks nice
 	scooched some HUD elements further to the side
-	got rid of laphand animations; they take up a bunch of space and aren't needed
 
 COMPATABILITY:
 	GENERAL:
 		Elimination has a min players and will set the game's laps back to normal after a round
 		so if elim is turned off, it won't interfere with other mapload hooks if they need
-		to set them for a specific game mode (i.e frontrun)
\ No newline at end of file
+		to set them for a specific game mode (i.e frontrun)
+	HPMOD:
+		principally i've tried to make this as flexible as possible with Callmore's HP mod. it works p good.
+		HP mod helps speed things along and provide dopamine through killing people to survive
+		HPmod got some round-end support that details players dealing the most damage among other things
+			this has been received pretty well and I want to work more on giving out honorable mentions
+			I think it really helps keep people invested in the game even if they don't win
+	FRIENDMOD:
+		after a lot of kludging with tyron's friendmod i've managed to make elimination work passably with it
+		fatal KO's no longer kill the winning team, elim scoring isn't stomped on by it
+		spectators are shown in the scoreboard (according to their team)
+		and you only get 1 point if you're alive, 0 if you're aliven't. 
+		HUD reorganization was done since there was some :freerealestate: where the lap counter used to be
+		there are currently no good implemented solutions to friendly fire and friendly fire still isn't totally discouraged unfortunately
+			(I know for a fact you can still kill people on your team and heal via HP mod if that's on so)
+	
+	ACROBATICS:
+		because of how acro v0.5 is and slipstream beta is and its gonna be a while until we see updates for them,
+		there's a very basic crossmod support function that was imitated from acro's crossmod support functions (thank you Angular)
+		See LUA_CROS
\ No newline at end of file
